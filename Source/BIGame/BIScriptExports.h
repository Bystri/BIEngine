#pragma once

#include <pybind11/embed.h>

#include "BIEventListener.h"

namespace py = pybind11;

PYBIND11_EMBEDDED_MODULE(BIGInputEvent, m)
{
   py::class_<EvtData_OnKeyEvent, BIEngine::BaseEventData, std::shared_ptr<EvtData_OnKeyEvent>> keyEvent(m, "EvtData_OnKeyEvent");

   py::enum_<EvtData_OnKeyEvent::Key>(keyEvent, "Key")
      .value("UNKNOWN", EvtData_OnKeyEvent::Key::UNKNOWN)
      .value("SPACE", EvtData_OnKeyEvent::Key::SPACE)
      .value("APOSTROPHE", EvtData_OnKeyEvent::Key::APOSTROPHE)
      .value("COMMA", EvtData_OnKeyEvent::Key::COMMA)
      .value("MINUS", EvtData_OnKeyEvent::Key::MINUS)
      .value("PERIOD", EvtData_OnKeyEvent::Key::PERIOD)
      .value("SLASH", EvtData_OnKeyEvent::Key::SLASH)
      .value("KEY_0", EvtData_OnKeyEvent::Key::KEY_0)
      .value("KEY_1", EvtData_OnKeyEvent::Key::KEY_1)
      .value("KEY_2", EvtData_OnKeyEvent::Key::KEY_2)
      .value("KEY_3", EvtData_OnKeyEvent::Key::KEY_3)
      .value("KEY_4", EvtData_OnKeyEvent::Key::KEY_4)
      .value("KEY_5", EvtData_OnKeyEvent::Key::KEY_5)
      .value("KEY_6", EvtData_OnKeyEvent::Key::KEY_6)
      .value("KEY_7", EvtData_OnKeyEvent::Key::KEY_7)
      .value("KEY_8", EvtData_OnKeyEvent::Key::KEY_8)
      .value("KEY_9", EvtData_OnKeyEvent::Key::KEY_9)
      .value("SEMICOLON", EvtData_OnKeyEvent::Key::SEMICOLON)
      .value("EQUAL", EvtData_OnKeyEvent::Key::EQUAL)
      .value("A", EvtData_OnKeyEvent::Key::A)
      .value("B", EvtData_OnKeyEvent::Key::B)
      .value("C", EvtData_OnKeyEvent::Key::C)
      .value("D", EvtData_OnKeyEvent::Key::D)
      .value("E", EvtData_OnKeyEvent::Key::E)
      .value("F", EvtData_OnKeyEvent::Key::F)
      .value("G", EvtData_OnKeyEvent::Key::G)
      .value("H", EvtData_OnKeyEvent::Key::H)
      .value("I", EvtData_OnKeyEvent::Key::I)
      .value("J", EvtData_OnKeyEvent::Key::J)
      .value("K", EvtData_OnKeyEvent::Key::K)
      .value("L", EvtData_OnKeyEvent::Key::L)
      .value("M", EvtData_OnKeyEvent::Key::M)
      .value("N", EvtData_OnKeyEvent::Key::N)
      .value("O", EvtData_OnKeyEvent::Key::O)
      .value("P", EvtData_OnKeyEvent::Key::P)
      .value("Q", EvtData_OnKeyEvent::Key::Q)
      .value("R", EvtData_OnKeyEvent::Key::R)
      .value("S", EvtData_OnKeyEvent::Key::S)
      .value("T", EvtData_OnKeyEvent::Key::T)
      .value("U", EvtData_OnKeyEvent::Key::U)
      .value("V", EvtData_OnKeyEvent::Key::V)
      .value("W", EvtData_OnKeyEvent::Key::W)
      .value("X", EvtData_OnKeyEvent::Key::X)
      .value("Y", EvtData_OnKeyEvent::Key::Y)
      .value("Z", EvtData_OnKeyEvent::Key::Z)
      .value("LEFT_BRACKET", EvtData_OnKeyEvent::Key::LEFT_BRACKET)
      .value("BACKSLASH", EvtData_OnKeyEvent::Key::BACKSLASH)
      .value("RIGHT_BRACKET", EvtData_OnKeyEvent::Key::RIGHT_BRACKET)
      .value("GRAVE_ACCENT", EvtData_OnKeyEvent::Key::GRAVE_ACCENT)
      .value("WORLD_1", EvtData_OnKeyEvent::Key::WORLD_1)
      .value("WORLD_2", EvtData_OnKeyEvent::Key::WORLD_2)
      .value("ESCAPE", EvtData_OnKeyEvent::Key::ESCAPE)
      .value("ENTER", EvtData_OnKeyEvent::Key::ENTER)
      .value("TAB", EvtData_OnKeyEvent::Key::TAB)
      .value("BACKSPACE", EvtData_OnKeyEvent::Key::BACKSPACE)
      .value("INSERT", EvtData_OnKeyEvent::Key::INSERT)
      .value("DELETE", EvtData_OnKeyEvent::Key::DEL)
      .value("RIGHT", EvtData_OnKeyEvent::Key::RIGHT)
      .value("LEFT", EvtData_OnKeyEvent::Key::LEFT)
      .value("DOWN", EvtData_OnKeyEvent::Key::DOWN)
      .value("UP", EvtData_OnKeyEvent::Key::UP)
      .value("PAGE_UP", EvtData_OnKeyEvent::Key::PAGE_UP)
      .value("PAGE_DOWN", EvtData_OnKeyEvent::Key::PAGE_DOWN)
      .value("HOME", EvtData_OnKeyEvent::Key::HOME)
      .value("END", EvtData_OnKeyEvent::Key::END)
      .value("CAPS_LOCK", EvtData_OnKeyEvent::Key::CAPS_LOCK)
      .value("SCROLL_LOCK", EvtData_OnKeyEvent::Key::SCROLL_LOCK)
      .value("NUM_LOCK", EvtData_OnKeyEvent::Key::NUM_LOCK)
      .value("PRINT_SCREEN", EvtData_OnKeyEvent::Key::PRINT_SCREEN)
      .value("PAUSE", EvtData_OnKeyEvent::Key::PAUSE)
      .value("F1", EvtData_OnKeyEvent::Key::F1)
      .value("F2", EvtData_OnKeyEvent::Key::F2)
      .value("F3", EvtData_OnKeyEvent::Key::F3)
      .value("F4", EvtData_OnKeyEvent::Key::F4)
      .value("F5", EvtData_OnKeyEvent::Key::F5)
      .value("F6", EvtData_OnKeyEvent::Key::F6)
      .value("F7", EvtData_OnKeyEvent::Key::F7)
      .value("F8", EvtData_OnKeyEvent::Key::F8)
      .value("F9", EvtData_OnKeyEvent::Key::F9)
      .value("F10", EvtData_OnKeyEvent::Key::F10)
      .value("F11", EvtData_OnKeyEvent::Key::F11)
      .value("F12", EvtData_OnKeyEvent::Key::F12)
      .value("F13", EvtData_OnKeyEvent::Key::F13)
      .value("F14", EvtData_OnKeyEvent::Key::F14)
      .value("F15", EvtData_OnKeyEvent::Key::F15)
      .value("F16", EvtData_OnKeyEvent::Key::F16)
      .value("F17", EvtData_OnKeyEvent::Key::F17)
      .value("F18", EvtData_OnKeyEvent::Key::F18)
      .value("F19", EvtData_OnKeyEvent::Key::F19)
      .value("F20", EvtData_OnKeyEvent::Key::F20)
      .value("F21", EvtData_OnKeyEvent::Key::F21)
      .value("F22", EvtData_OnKeyEvent::Key::F22)
      .value("F23", EvtData_OnKeyEvent::Key::F23)
      .value("F24", EvtData_OnKeyEvent::Key::F24)
      .value("F25", EvtData_OnKeyEvent::Key::F25)
      .value("KP_0", EvtData_OnKeyEvent::Key::KP_0)
      .value("KP_1", EvtData_OnKeyEvent::Key::KP_1)
      .value("KP_2", EvtData_OnKeyEvent::Key::KP_2)
      .value("KP_3", EvtData_OnKeyEvent::Key::KP_3)
      .value("KP_4", EvtData_OnKeyEvent::Key::KP_4)
      .value("KP_5", EvtData_OnKeyEvent::Key::KP_5)
      .value("KP_6", EvtData_OnKeyEvent::Key::KP_6)
      .value("KP_7", EvtData_OnKeyEvent::Key::KP_7)
      .value("KP_8", EvtData_OnKeyEvent::Key::KP_8)
      .value("KP_9", EvtData_OnKeyEvent::Key::KP_9)
      .value("KP_DECIMAL", EvtData_OnKeyEvent::Key::KP_DECIMAL)
      .value("KP_DIVIDE", EvtData_OnKeyEvent::Key::KP_DIVIDE)
      .value("KP_MULTIPLY", EvtData_OnKeyEvent::Key::KP_MULTIPLY)
      .value("KP_SUBTRACT", EvtData_OnKeyEvent::Key::KP_SUBTRACT)
      .value("KP_ADD", EvtData_OnKeyEvent::Key::KP_ADD)
      .value("KP_ENTER", EvtData_OnKeyEvent::Key::KP_ENTER)
      .value("KP_EQUAL", EvtData_OnKeyEvent::Key::KP_EQUAL)
      .value("LEFT_SHIFT", EvtData_OnKeyEvent::Key::LEFT_SHIFT)
      .value("LEFT_CONTROL", EvtData_OnKeyEvent::Key::LEFT_CONTROL)
      .value("LEFT_ALT", EvtData_OnKeyEvent::Key::LEFT_ALT)
      .value("LEFT_SUPER", EvtData_OnKeyEvent::Key::LEFT_SUPER)
      .value("RIGHT_SHIFT", EvtData_OnKeyEvent::Key::RIGHT_SHIFT)
      .value("RIGHT_CONTROL", EvtData_OnKeyEvent::Key::RIGHT_CONTROL)
      .value("RIGHT_ALT", EvtData_OnKeyEvent::Key::RIGHT_ALT)
      .value("RIGHT_SUPER", EvtData_OnKeyEvent::Key::RIGHT_SUPER)
      .value("MENU", EvtData_OnKeyEvent::Key::MENU)

      .export_values();

   py::class_<EvtData_OnKeyDown, EvtData_OnKeyEvent, std::shared_ptr<EvtData_OnKeyDown>>(m, "EvtData_OnKeyDown")
      .def_readonly_static("eventType", &EvtData_OnKeyDown::sk_EventType)
      .def("GetKey", &EvtData_OnKeyDown::GetKey);

   py::class_<EvtData_OnKeyUp, EvtData_OnKeyEvent, std::shared_ptr<EvtData_OnKeyUp>>(m, "EvtData_OnKeyUp")
      .def_readonly_static("eventType", &EvtData_OnKeyUp::sk_EventType)
      .def("GetKey", &EvtData_OnKeyUp::GetKey);
}
